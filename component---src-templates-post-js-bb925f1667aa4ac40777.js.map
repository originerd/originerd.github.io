{"version":3,"sources":["webpack:///./src/templates/Post.js"],"names":["Post","renderTags","tags","this","props","data","markdownRemark","frontmatter","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","join","render","_this$props$data$mark","html","date","title","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","className","moment","tz","format","dangerouslySetInnerHTML","__html","React","Component","propTypes","PropTypes","shape","excerpt","string","array","query"],"mappings":"6NAQMA,oGACJC,sBAAa,IACHC,EAASC,KAAKC,MAAMC,KAAKC,eAAeC,YAAxCL,KAER,OAAKA,EAIEM,EAAAC,EAAAC,cAAA,SAAIR,EAAKS,KAAK,OAHZ,QAMXC,kBAAS,IAAAC,EAGHV,KAAKC,MAAMC,KADbC,eAAkBC,EAFbM,EAEaN,YAAaO,EAF1BD,EAE0BC,KAEzBC,EAAgBR,EAAhBQ,KAAMC,EAAUT,EAAVS,MAEd,OACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAA,WAASQ,UAAU,gCACjBV,EAAAC,EAAAC,cAAA,UAAKM,GACLR,EAAAC,EAAAC,cAAA,SAAIS,IAAOC,GAAGL,EAAM,cAAcM,OAAO,QACxClB,KAAKF,aACNO,EAAAC,EAAAC,cAAA,OAAKY,wBAAyB,CAAEC,OAAQT,WAvB/BU,IAAMC,WA8BzBzB,EAAK0B,UAAY,CACfrB,KAAMsB,IAAUC,MAAM,CACpBtB,eAAgBqB,IAAUC,MAAM,CAC9BC,QAASF,IAAUG,OACnBvB,YAAaoB,IAAUC,MAAM,CAC3Bb,KAAMY,IAAUG,OAChB5B,KAAMyB,IAAUI,MAChBf,MAAOW,IAAUG,SAEnBhB,KAAMa,IAAUG,YAKf,IAAME,EAAK,aAcHhC","file":"component---src-templates-post-js-bb925f1667aa4ac40777.js","sourcesContent":["import { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport 'moment-timezone'\nimport React from 'react'\n\nimport Layout from '../components/Layout'\n\nclass Post extends React.Component {\n  renderTags() {\n    const { tags } = this.props.data.markdownRemark.frontmatter\n\n    if (!tags) {\n      return null\n    }\n\n    return <p>{tags.join(', ')}</p>\n  }\n\n  render() {\n    const {\n      markdownRemark: { frontmatter, html },\n    } = this.props.data\n    const { date, title } = frontmatter\n\n    return (\n      <Layout>\n        <article className=\"container container--article\">\n          <h1>{title}</h1>\n          <p>{moment.tz(date, 'Asia/Seoul').format('lll')}</p>\n          {this.renderTags()}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      excerpt: PropTypes.string,\n      frontmatter: PropTypes.shape({\n        date: PropTypes.string,\n        tags: PropTypes.array,\n        title: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n}\n\nexport const query = graphql`\n  query Post($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      frontmatter {\n        date\n        tags\n        title\n      }\n      html\n    }\n  }\n`\n\nexport default Post\n"],"sourceRoot":""}