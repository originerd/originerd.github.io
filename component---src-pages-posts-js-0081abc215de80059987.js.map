{"version":3,"sources":["webpack:///./src/pages/posts.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react_helmet__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","Posts","_ref2","_ref2$data","data","edges","allMarkdownRemark","title","site","siteMetadata","a","createElement","lang","className","map","edge","node","_ref","excerpt","fields","frontmatter","id","key","to","slug","propTypes","PropTypes","shape","arrayOf","string","date","tags","array","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,GAAAY,EAAAZ,EAAAO,EAAAI,GAAAE,EAAAb,EAAA,KAiBMc,EAAQ,SAAAC,GAAA,IAAAC,EAAAD,EACZE,KACuBC,EAFXF,EAEVG,kBAAqBD,MAEHE,EAJRJ,EAGVK,KACEC,aAAgBF,MAJR,OAQZV,EAAAa,EAAAC,cAACX,EAAA,EAAD,KACEH,EAAAa,EAAAC,cAAClB,EAAAiB,EAAD,CAAQH,MAAK,YAAcA,GACzBV,EAAAa,EAAAC,cAAA,QAAMC,KAAK,QAEbf,EAAAa,EAAAC,cAAA,QAAME,UAAU,gCACDR,EAAMS,IAAI,SAAAC,GAAI,OAAIA,EAAKC,OAtBlCF,IAAI,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,OAAQC,EAApBH,EAAoBG,YAAaC,EAAjCJ,EAAiCI,GAAjC,OACRxB,EAAAa,EAAAC,cAAA,WAASE,UAAU,OAAOS,IAAKD,GAC7BxB,EAAAa,EAAAC,cAAChB,EAAA,KAAD,CAAM4B,GAAIJ,EAAOK,MACf3B,EAAAa,EAAAC,cAAA,UAAKS,EAAYb,QAEnBV,EAAAa,EAAAC,cAAA,SAAIO,SAsBVjB,EAAMwB,UAAY,CAChBrB,KAAMsB,IAAUC,MAAM,CACpBrB,kBAAmBoB,IAAUC,MAAM,CACjCtB,MAAOqB,IAAUE,QACfF,IAAUC,MAAM,CACdX,KAAMU,IAAUC,MAAM,CACpBT,QAASQ,IAAUG,OACnBV,OAAQO,IAAUC,MAAM,CACtBH,KAAME,IAAUG,SAElBT,YAAaM,IAAUC,MAAM,CAC3BG,KAAMJ,IAAUG,OAChBE,KAAML,IAAUM,MAChBzB,MAAOmB,IAAUG,SAEnBR,GAAIK,IAAUG,cAKtBrB,KAAMkB,IAAUC,MAAM,CACpBlB,aAAciB,IAAUC,MAAM,CAC5BpB,MAAOmB,IAAUG,OAAOI,kBAMzB,IAAM1C,EAAS,YA6BPU","file":"component---src-pages-posts-js-0081abc215de80059987.js","sourcesContent":["import Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../components/Layout'\n\nconst renderPosts = posts =>\n  posts.map(({ excerpt, fields, frontmatter, id }) => (\n    <article className=\"card\" key={id}>\n      <Link to={fields.slug}>\n        <h2>{frontmatter.title}</h2>\n      </Link>\n      <p>{excerpt}</p>\n    </article>\n  ))\n\nconst Posts = ({\n  data: {\n    allMarkdownRemark: { edges },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout>\n    <Helmet title={`Posts :: ${title}`}>\n      <html lang=\"en\" />\n    </Helmet>\n    <main className=\"container container--article\">\n      {renderPosts(edges.map(edge => edge.node))}\n    </main>\n  </Layout>\n)\n\nPosts.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            fields: PropTypes.shape({\n              slug: PropTypes.string,\n            }),\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string,\n              tags: PropTypes.array,\n              title: PropTypes.string,\n            }),\n            id: PropTypes.string,\n          }),\n        })\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query Posts {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/^/posts/*/\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            date(formatString: \"YYYY/MM/DD\")\n          }\n          id\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default Posts\n"],"sourceRoot":""}