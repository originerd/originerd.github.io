{"version":3,"sources":["webpack:///./src/templates/Post.js"],"names":["Post","renderDate","date","seoulTime","moment","add","format","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","renderTags","tags","this","props","data","markdownRemark","frontmatter","join","render","_this$props$data","_this$props$data$mark","html","siteMetadata","site","title","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","lang","dangerouslySetInnerHTML","__html","React","Component","propTypes","PropTypes","shape","excerpt","string","array","isRequired","query"],"mappings":"+OASMA,oGACJC,WAAA,SAAWC,GACT,IAAMC,EAAYC,IAAOF,GACtBG,KAAK,EAAG,SACRC,OAAO,OAEV,OAAOC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQP,MAG9BQ,WAAA,WAAa,IACHC,EAASC,KAAKC,MAAMC,KAAKC,eAAeC,YAAxCL,KAER,OAAKA,EAIEL,EAAAC,EAAAC,cAAA,SAAIG,EAAKM,KAAK,OAHZ,QAMXC,OAAA,WAAS,IAAAC,EAIHP,KAAKC,MAAMC,KAJRM,EAAAD,EAELJ,eAAkBC,EAFbI,EAEaJ,YAAaK,EAF1BD,EAE0BC,KACvBC,EAHHH,EAGLI,KAAQD,aAEFrB,EAAgBe,EAAhBf,KAAMuB,EAAUR,EAAVQ,MAEd,OACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQiB,MAAUA,EAAL,OAAiBF,EAAaE,OACzClB,EAAAC,EAAAC,cAAA,QAAMmB,KAAK,QAEbrB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gCACjBH,EAAAC,EAAAC,cAAA,UAAKgB,GACJZ,KAAKZ,WAAWC,GAChBW,KAAKF,aACNJ,EAAAC,EAAAC,cAAA,OAAKoB,wBAAyB,CAAEC,OAAQR,WAnC/BS,IAAMC,WA0CzBhC,EAAKiC,UAAY,CACflB,KAAMmB,IAAUC,MAAM,CACpBnB,eAAgBkB,IAAUC,MAAM,CAC9BC,QAASF,IAAUG,OACnBpB,YAAaiB,IAAUC,MAAM,CAC3BjC,KAAMgC,IAAUG,OAChBzB,KAAMsB,IAAUI,MAChBb,MAAOS,IAAUG,SAEnBf,KAAMY,IAAUG,SAElBb,KAAMU,IAAUC,MAAM,CACpBZ,aAAcW,IAAUC,MAAM,CAC5BV,MAAOS,IAAUG,OAAOE,kBAMzB,IAAMC,EAAK,aAmBHxC","file":"component---src-templates-post-js-644c99cd04d48036e5be.js","sourcesContent":["import Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport 'moment-timezone'\nimport React from 'react'\n\nimport Layout from '../components/Layout'\n\nclass Post extends React.Component {\n  renderDate(date) {\n    const seoulTime = moment(date)\n      .add(-9, 'hours')\n      .format('lll')\n\n    return <p className=\"date\">{seoulTime}</p>\n  }\n\n  renderTags() {\n    const { tags } = this.props.data.markdownRemark.frontmatter\n\n    if (!tags) {\n      return null\n    }\n\n    return <p>{tags.join(', ')}</p>\n  }\n\n  render() {\n    const {\n      markdownRemark: { frontmatter, html },\n      site: { siteMetadata },\n    } = this.props.data\n    const { date, title } = frontmatter\n\n    return (\n      <Layout>\n        <Helmet title={`${title} :: ${siteMetadata.title}`}>\n          <html lang=\"en\" />\n        </Helmet>\n        <article className=\"container container--article\">\n          <h1>{title}</h1>\n          {this.renderDate(date)}\n          {this.renderTags()}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      excerpt: PropTypes.string,\n      frontmatter: PropTypes.shape({\n        date: PropTypes.string,\n        tags: PropTypes.array,\n        title: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport const query = graphql`\n  query Post($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      frontmatter {\n        date\n        tags\n        title\n      }\n      html\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default Post\n"],"sourceRoot":""}