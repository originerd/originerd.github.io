{"version":3,"sources":["webpack:///./src/pages/posts.js"],"names":["Posts","_ref2","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","className","map","edge","node","_ref","excerpt","fields","frontmatter","id","key","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","slug","title","propTypes","PropTypes","shape","arrayOf","string","date","tags","array","pageQuery"],"mappings":"qMAgBMA,EAAQ,SAAAC,GAAA,IAEWC,EAFXD,EACZE,KACEC,kBAAqBF,MAFX,OAKZG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,gCACDP,EAAMQ,IAAI,SAAAC,GAAI,OAAIA,EAAKC,OAhBlCF,IAAI,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,OAAQC,EAApBH,EAAoBG,YAAaC,EAAjCJ,EAAiCI,GAAjC,OACRZ,EAAAC,EAAAC,cAAA,WAASE,UAAU,OAAOS,IAAKD,GAC7BZ,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAMC,GAAIL,EAAOM,MACfhB,EAAAC,EAAAC,cAAA,UAAKS,EAAYM,QAEnBjB,EAAAC,EAAAC,cAAA,SAAIO,SAgBVd,EAAMuB,UAAY,CAChBpB,KAAMqB,IAAUC,MAAM,CACpBrB,kBAAmBoB,IAAUC,MAAM,CACjCvB,MAAOsB,IAAUE,QACfF,IAAUC,MAAM,CACdb,KAAMY,IAAUC,MAAM,CACpBX,QAASU,IAAUG,OACnBZ,OAAQS,IAAUC,MAAM,CACtBJ,KAAMG,IAAUG,SAElBX,YAAaQ,IAAUC,MAAM,CAC3BG,KAAMJ,IAAUG,OAChBE,KAAML,IAAUM,MAChBR,MAAOE,IAAUG,SAEnBV,GAAIO,IAAUG,iBAQnB,IAAMI,EAAS,YAwBP/B","file":"component---src-pages-posts-js-67fc66baf2ccc859016d.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../components/Layout'\n\nconst renderPosts = posts =>\n  posts.map(({ excerpt, fields, frontmatter, id }) => (\n    <article className=\"card\" key={id}>\n      <Link to={fields.slug}>\n        <h2>{frontmatter.title}</h2>\n      </Link>\n      <p>{excerpt}</p>\n    </article>\n  ))\n\nconst Posts = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <main className=\"container container--article\">\n      {renderPosts(edges.map(edge => edge.node))}\n    </main>\n  </Layout>\n)\n\nPosts.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            fields: PropTypes.shape({\n              slug: PropTypes.string,\n            }),\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string,\n              tags: PropTypes.array,\n              title: PropTypes.string,\n            }),\n            id: PropTypes.string,\n          }),\n        })\n      ),\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query Posts {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/^/posts/*/\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            date(formatString: \"YYYY/MM/DD\")\n          }\n          id\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n"],"sourceRoot":""}