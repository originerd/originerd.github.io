{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","navItems","name","path","navColors","Header","_ref2","pathname","siteTitle","window","location","react_default","className","gatsby_browser_entry","to","filter","navItem","map","i","length","key","moment","locale","Layout","_ref","Fragment","Helmet_default","title","site","siteMetadata","lang","components_Header","_755544856","node","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-1f930eb26400b7035f7f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport '../styles/header.css'\n\nconst navItems = [\n  { name: 'about', path: '/about/' },\n  { name: 'posts', path: '/posts/' },\n  { name: 'résumé', path: '/resume/' },\n]\nconst navColors = ['yellow', 'orange', 'cherryred']\n\nconst renderNavLinks = () => {\n  const { pathname } = typeof window !== 'undefined' && window.location\n\n  return navItems\n    .filter(navItem => pathname !== `/${navItem}/`)\n    .map((navItem, i) => (\n      <Link\n        className={`nav-link nav-link--${navColors[i % navColors.length]}`}\n        key={navItem.name}\n        to={navItem.path}\n      >\n        <h2 className=\"nav-link__content\">{navItem.name}</h2>\n      </Link>\n    ))\n}\n\nconst Header = ({ siteTitle }) => {\n  if (typeof window !== 'undefined' && window.location.pathname === '/') {\n    return null\n  }\n\n  return (\n    <nav className=\"header\">\n      <Link className=\"nav-link\" to=\"/\">\n        <h1 className=\"nav-link__content\">{siteTitle}</h1>\n      </Link>\n      <div>{renderNavLinks()}</div>\n    </nav>\n  )\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport 'normalize.css'\nimport 'prismjs/themes/prism-solarizedlight.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport '../fonts/index.css'\nimport '../styles/layout.css'\nimport Header from './Header'\n\nmoment.locale('ko')\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet title={data.site.siteMetadata.title}>\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}