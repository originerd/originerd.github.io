{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","navItems","name","path","navColors","Header","currentPath","hide","siteTitle","react_default","className","gatsby_browser_entry","to","window","map","navItem","i","isActive","classNames","length","filter","Boolean","join","key","bool","moment","locale","Layout","hideHeader","Fragment","Helmet_default","title","site","siteMetadata","lang","components_Header","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-bb703ef4d47fc8f591fe.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport '../styles/header.css'\n\nconst navItems = [\n  { name: 'about', path: '/about/' },\n  { name: 'posts', path: '/posts/' },\n  { name: 'résumé', path: '/resume/' },\n]\nconst navColors = ['emerald', 'yellow', 'cherryred']\n\nconst renderNavLinks = () => {\n  const currentPath = typeof window !== 'undefined' && window.location.pathname\n\n  return navItems.map((navItem, i) => {\n    const isActive = currentPath === navItem.path\n    const classNames = [\n      'nav-link',\n      `nav-link--${navColors[i % navColors.length]}`,\n      isActive && 'nav-link--active',\n    ]\n\n    return (\n      <Link\n        className={classNames.filter(Boolean).join(' ')}\n        key={navItem.name}\n        to={navItem.path}\n      >\n        <h2 className=\"nav-link__content\">{navItem.name}</h2>\n      </Link>\n    )\n  })\n}\n\nconst Header = ({ hide, siteTitle }) => {\n  if (hide) {\n    return null\n  }\n\n  return (\n    <nav className=\"header\">\n      <Link className=\"nav-link\" to=\"/\">\n        <h1 className=\"nav-link__content\">{siteTitle}</h1>\n      </Link>\n      <div className=\"nav-link-group\">{renderNavLinks()}</div>\n    </nav>\n  )\n}\n\nHeader.propTypes = {\n  hide: PropTypes.bool,\n  siteTitle: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport '../styles/layout.css'\nimport Header from './Header'\n\nmoment.locale('ko')\n\nconst Layout = ({ children, hideHeader }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet title={data.site.siteMetadata.title}>\n          <html lang=\"en\" />\n        </Helmet>\n        <Header hide={hideHeader} siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  hideHeader: PropTypes.bool,\n}\n\nexport default Layout\n"],"sourceRoot":""}