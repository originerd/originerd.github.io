{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["Posts","_ref2","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","className","map","edge","node","_ref","excerpt","fields","frontmatter","id","key","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","slug","title","propTypes","PropTypes","shape","arrayOf","string","date","tags","array","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","navItems","name","path","navColors","Header","hide","siteTitle","react_default","gatsby_browser_entry","window","filter","navItem","i","length","boolean","moment","locale","Layout","hideHeader","Fragment","Helmet_default","site","siteMetadata","lang","components_Header","_755544856"],"mappings":"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","file":"component---src-pages-posts-js-b31e8cfc942e78aa1efe.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../components/Layout'\n\nconst renderPosts = posts =>\n  posts.map(({ excerpt, fields, frontmatter, id }) => (\n    <article className=\"card\" key={id}>\n      <Link to={fields.slug}>\n        <h2>{frontmatter.title}</h2>\n      </Link>\n      <p>{excerpt}</p>\n    </article>\n  ))\n\nconst Posts = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <main className=\"container container--article\">\n      {renderPosts(edges.map(edge => edge.node))}\n    </main>\n  </Layout>\n)\n\nPosts.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            fields: PropTypes.shape({\n              slug: PropTypes.string,\n            }),\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string,\n              tags: PropTypes.array,\n              title: PropTypes.string,\n            }),\n            id: PropTypes.string,\n          }),\n        })\n      ),\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query Posts {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/^/posts/*/\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            date(formatString: \"YYYY/MM/DD\")\n          }\n          id\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport '../styles/header.css'\n\nconst navItems = [\n  { name: 'about', path: '/about/' },\n  { name: 'posts', path: '/posts/' },\n  { name: 'r√©sum√©', path: '/resume/' },\n]\nconst navColors = ['yellow', 'orange', 'cherryred']\n\nconst renderNavLinks = () => {\n  const { pathname } = typeof window !== 'undefined' && window.location\n\n  return navItems\n    .filter(navItem => pathname !== `/${navItem}/`)\n    .map((navItem, i) => (\n      <Link\n        className={`nav-link nav-link--${navColors[i % navColors.length]}`}\n        key={navItem.name}\n        to={navItem.path}\n      >\n        <h2 className=\"nav-link__content\">{navItem.name}</h2>\n      </Link>\n    ))\n}\n\nconst Header = ({ hide, siteTitle }) => {\n  if (hide) {\n    return null\n  }\n\n  return (\n    <nav className=\"header\">\n      <Link className=\"nav-link\" to=\"/\">\n        <h1 className=\"nav-link__content\">{siteTitle}</h1>\n      </Link>\n      <div>{renderNavLinks()}</div>\n    </nav>\n  )\n}\n\nHeader.propTypes = {\n  hide: PropTypes.boolean,\n  siteTitle: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { graphql, StaticQuery } from 'gatsby'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport '../styles/layout.css'\nimport Header from './Header'\n\nmoment.locale('ko')\n\nconst Layout = ({ children, hideHeader }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet title={data.site.siteMetadata.title}>\n          <html lang=\"en\" />\n        </Helmet>\n        <Header hide={hideHeader} siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  hideHeader: PropTypes.boolean,\n}\n\nexport default Layout\n"],"sourceRoot":""}